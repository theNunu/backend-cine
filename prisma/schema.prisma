// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Cinema {
  id Int @id @default(autoincrement())
  auditCreateUser Int @default(1)
  auditCreateDate DateTime @default(now())
  auditUpdateUser Int?
  auditUpdateDate DateTime?
  auditDeleteUser Int?
  auditDeleteDate DateTime?
  state Int @default(1)

  name String 
  duration Int 
  urlImage String

  cinemaRooms CinemaRoom[]
}

model CinemaRoom {
  id Int @id @default(autoincrement())
  auditCreateUser Int @default(1)
  auditCreateDate DateTime @default(now())
  auditUpdateUser Int?
  auditUpdateDate DateTime?
  auditDeleteUser Int?
  auditDeleteDate DateTime?
  state Int @default(1)

  endDate DateTime

  // Relaciones muchos a muchos
  cinemaId Int
  roomId Int
  cinema Cinema @relation(fields: [cinemaId], references: [id])
  room Room @relation(fields: [roomId], references: [id])
}

model Room {
  id Int @id @default(autoincrement())
  auditCreateUser Int @default(1)
  auditCreateDate DateTime @default(now())
  auditUpdateUser Int?
  auditUpdateDate DateTime?
  auditDeleteUser Int?
  auditDeleteDate DateTime?
  state Int @default(1)

  name String

  cinemaRooms CinemaRoom[]
}